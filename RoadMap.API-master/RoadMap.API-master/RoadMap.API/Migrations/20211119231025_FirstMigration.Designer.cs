// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoadMap.API.Entities;

namespace RoadMap.API.Migrations
{
    [DbContext(typeof(MapDbContext))]
    [Migration("20211119231025_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RoadMap.API.Entities.Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("RoadMap.API.Entities.OthersType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RoomId_Room")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId_Room");

                    b.ToTable("OthersTypes");
                });

            modelBuilder.Entity("RoadMap.API.Entities.Room", b =>
                {
                    b.Property<int>("Id_Room")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MapId")
                        .HasColumnType("int");

                    b.Property<int>("Position_X")
                        .HasColumnType("int");

                    b.Property<int>("Position_Y")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id_Room");

                    b.HasIndex("MapId");

                    b.HasIndex("TypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("RoadMap.API.Entities.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("RoadMap.API.Entities.OthersType", b =>
                {
                    b.HasOne("RoadMap.API.Entities.Room", null)
                        .WithMany("Others")
                        .HasForeignKey("RoomId_Room");
                });

            modelBuilder.Entity("RoadMap.API.Entities.Room", b =>
                {
                    b.HasOne("RoadMap.API.Entities.Map", null)
                        .WithMany("Rooms")
                        .HasForeignKey("MapId");

                    b.HasOne("RoadMap.API.Entities.RoomType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("RoadMap.API.Entities.Map", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("RoadMap.API.Entities.Room", b =>
                {
                    b.Navigation("Others");
                });
#pragma warning restore 612, 618
        }
    }
}
